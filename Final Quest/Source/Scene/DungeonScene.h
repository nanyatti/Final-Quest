#pragma once
#include "AbstructScene.h"
#include "../Define/Define.h"

class Character;
class Monster;

/*!
* @brief ダンジョンシーン
*/
class DungeonScene final : public AbstructScene {

private:

	// ダンジョンシーンの状態を列挙
	enum State {
		PREPARATION,
		MAP_CREATION,
		ADVENTURE,
		BATTLE
	};

public:

	int map[Define::NUM_TOTAL_STAGE][Define::WINDOW_HEIGHT / Define::WIDE][Define::WINDOW_WIDTH / Define::WIDE] = {
		{
			{3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3},
			{3,0,0,0,1,1,0,0,0,0,0,0,0,0,2,2,2,2,0,0},
			{3,0,0,0,1,1,1,0,0,0,0,0,0,0,0,2,2,0,0,3},
			{3,0,2,0,1,1,0,0,0,0,0,0,0,2,0,2,2,0,0,3},
			{3,2,2,0,1,1,1,1,2,2,0,0,0,0,0,0,2,0,0,3},
			{3,0,2,0,3,3,1,1,1,1,0,0,0,0,0,0,0,0,0,3},
			{3,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3},
			{3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3},
			{3,0,2,2,2,2,1,1,0,0,0,0,0,0,0,0,1,2,2,3},
			{3,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,3},
			{3,0,0,2,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,3},
			{3,0,0,2,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,3},
			{3,0,2,2,2,2,2,2,2,0,0,0,2,2,2,2,2,2,2,3},
			{3,0,2,2,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,3},
			{3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3},
		},
		{
			{3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,0,3},
			{3,0,0,0,1,0,1,0,0,0,0,0,0,0,1,1,1,0,0,3},
			{3,0,0,0,0,0,1,0,0,0,0,0,0,2,1,2,1,0,0,3},
			{3,2,0,0,1,0,0,0,0,0,0,0,2,1,1,0,1,0,0,3},
			{3,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,3},
			{3,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,3},
			{3,0,0,0,1,1,0,0,1,1,1,1,0,0,0,1,0,0,0,3},
			{3,0,0,0,1,1,0,0,0,0,1,1,0,0,0,1,0,0,0,3},
			{3,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,3},
			{3,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,1,1,0,3},
			{3,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,3},
			{3,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,1,3},
			{3,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,3},
			{3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3},
		}
	};

	int mapd[Define::WINDOW_HEIGHT / Define::WIDE][Define::WINDOW_WIDTH / Define::WIDE];
	int mapchip_img[1][4];

public:

	DungeonScene(IOnSceneChangedListener * sc_listener, const Parameter & parameter);
	~DungeonScene();
	void Update() final;
	void Draw() final;

private:

	void CreateMap();
	void DrawMap();

private:

	State state_;			// シーンの状態
	Character * player_;	// プレイヤー
	Monster * monster_;		// モンスター
};