/*仕様書*/

/*

ファイルの構成は以下の通り。

各フィルタは

バトルに関するファイルが入っている
・battleフィルタ
  -animation.cpp		バトルのアニメーションの計算に関するファイル
　-battle_calc.cpp		バトルの各計算に関するファイル
  -battle_graph.cpp		バトルの描画に関するファイル
  -battle_graph_calc.cpp描画のための計算に関するファイル
  -battle_opening.cpp	バトルに突入する時のオープニングに関するファイル
  -board.cpp			メニュー項目、HP,MP表示ボードに関する計算を行うファイル
  -ch_motion.cpp		見方キャラのモーションに関する計算を行うファイル
  -mon_motion.cpp		敵キャラのモーションに関する計算を行うファイル
  -motion.cpp			各モーションの関数が入っているファイル

様々な計算に関するファイルが入っている
・calcフィルタ
　-etc_calc.cpp		画面キャプチャ、FPS制御、入力制御など描画に直接関係無い計算に関するファイル
　-char_calc.cpp	キャラの計算
  -sound.cpp		音楽制御

描画に関するファイルが入っている
・graphフィルタ
　-char_graph.cpp	//キャラの描画
  -etc_graph.cpp	//その他の描画
  -map_graph.cpp	//マップの描画

描画の計算に関するフィルタが入っている
・graph_calcフィルタ
  -char_graph_calc.cpp	//キャラの描画計算
  -map_graph_calc.cpp	//マップの描画計算
  -mchar_graph_calc.cpp	//町のキャラの描画計算

にわかれていて、後は

-load.cpp	//ロード
-main.cpp	//メイン関数

で全て。


main.cppについて

func_statesでどの関数に処理を渡すかを決めている。
-1が初期化処理。ゲームオーバーになったときや、最初は-1にする。
0がマップ画面
1がバトルオープニング１
2がバトルオープニング２
3がバトル画面
バトルはバトルで似たような制御を行っているので、
バトル中の関数制御はbattle_calcをみるべし。
stbt_capch_flagはバトルに入る瞬間画面が割れるシーンを作る為に画面を16分割してキャプチャするかのフラグ




仕様書10
ATB=アクティブタイムバトル。リアルタイムで戦闘が出来る戦闘システムの事
ATBカウンタ＝最大になるとレインボーになるあのメーターのカウンタ
カウンタは満タンでないときで、増加フラグが立っている時は毎回１増加する。
１秒で60増加し、デフォルトで４秒で満タンにさせるため240で満タンになるようになっている。



仕様書11
メニューは何を現在選択しているかという「選択状態」と選択しているｙ座標である「選択位置」から
諸々の計算を行う。
メニューは
「選択項目表示」->(決定を受ける)->「詳細選択項目表示」->(決定を受ける) =行動パターン決定
となっている。

選択状態は決定するごとに100かける。
つまり
「攻撃」の選択が1で有った時、この選択が決定されると選択状態は100になる。
選択状態が100〜199の時は、攻撃に関する詳細選択項目を出せばいいことが解る。
もっと言えば
「魔法」の選択が2で有った時、この選択が決定されると選択状態は200になる。
選択状態が200〜299の時は、攻撃に関する詳細選択項目を出せばいいことが解る。

各選択項目に最大100種類のパターンが持たせれる。

攻撃、を選択・決定し、通常攻撃、をさらに選択・決定した場合、選択状態は10000になる。
選択状態は10000以上なら全ての選択が終了した事がわかる。

0は何をかけても0なので、「選択状態」は最小で1でなければならないため、
最初表示されている
・攻撃		1
・魔法		2
・ｱﾋﾞﾘﾃｨ	3
・ｱｲﾃﾑ		4
・逃げる	5
で対応している。

・攻撃		1
			-通常攻撃	100
			-ﾃｸﾆｶﾙｱﾀｯｸ	101

・魔法		2
			-キュアI	200
			-エアロ		201
			-ファイア	202
			-フリーザ	203
			-サンダー	204

・ｱﾋﾞﾘﾃｨ	3
			-挑発		300
			-ﾃﾞｨﾌｪﾝﾀﾞｰ	301

・ｱｲﾃﾑ		4
			(略)
・逃げる	5
			(略)

つまりこのような対応であり、全てが決定されると詳細選択項目*100の値になる。

一方で選択位置は0から4で対応するので、初期で選択状態は選択位置より+1ということになる
選択位置　選択状態
0			1
1			2
2			3
3			4
4			5
となるので注意。



仕様書12
ダメージは正規分布する乱数を用いて決定している。計算式はこちら。

ダメージ = レベル*2 + ((自分の攻撃力+武器の攻撃力) - (相手の防御力+相手の装備防御力)) * 自分の力*乱数1 + 自分の力*乱数2;

だいたい自分の攻撃力が１あがったり相手の防御力が１下がると
ダメージはだいたい１変化する。
レベルを基本ダメージとして加算するのでレベルが上がるごとにダメージは底上げされる。




仕様書13
バトルに突入する瞬間、画面を16分割してキャプチャし、その画像を中心から外へむけて座標移動して描画し※1、
一定の時間がたつと静止、ある程度静止したら加速度をもって落ちる※2ようにしてある。
※1,2において、毎回同じ描画にならないよう、少々乱数の要素を持たせてある。
x方向y方向にあらかじめ乱数をセットし、その乱数を使って微妙にずらして描画する。


*/